CREATE DEFINER=`root`@`localhost` PROCEDURE `DecryptSecret`(
    IN p_Username VARCHAR(45),
    OUT p_decryptedSaltSecretKey VARCHAR(256)
)
BEGIN
    DECLARE v_encryption_key VARCHAR(256);
    DECLARE v_encryptedSaltSecretKey VARBINARY(256);

    -- Retrieve the encryption key for the given username
    SELECT `key` INTO v_encryptedSaltSecretKey
    FROM external.sky
    WHERE username = p_Username
    LIMIT 1;

    -- Check if the username exists
    IF v_encryptedSaltSecretKey IS NOT NULL THEN
        -- Retrieve the encryption key from keydatabase
        SELECT `keys` INTO v_encryption_key 
        FROM keydatabase.keys
        WHERE application = 'HealthClincPro'
        LIMIT 1;

        -- Decrypt the secret using the retrieved encryption key
        SET p_decryptedSaltSecretKey = CAST(AES_DECRYPT(v_encryptedSaltSecretKey, v_encryption_key) AS CHAR);
    ELSE
        -- Handle the case where the username does not exist
        SET p_decryptedSaltSecretKey = NULL;
    END IF;
    -- SET @message_text = CONCAT('The value is ', saltSecretKey);
	-- SIGNAL SQLSTATE '45000'
	-- SET MESSAGE_TEXT = @message_text;
END